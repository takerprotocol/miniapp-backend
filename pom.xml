<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.abmatrix</groupId>
	<artifactId>bool-tg-interface</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>bool-tg-interface</name>
	<description>bool tg 接口</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.1</version>
	</parent>
	<properties>
		<!-- 基础属性-->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.deploy.skip>true</maven.deploy.skip>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<spring.cloud.version>2023.0.3</spring.cloud.version>
		<spring.cloud.alibaba.version>2023.0.1.2</spring.cloud.alibaba.version>
		<!--三方包版本-->
		<mybatis-plus-version>3.5.7</mybatis-plus-version>
		<dynamic-ds-version>4.3.1</dynamic-ds-version>
		<p6spy.version>3.9.1</p6spy.version>
		<redisson.version>3.32.0</redisson.version>
		<hutool.version>5.8.29</hutool.version>
		<mysql.version>8.0.33</mysql.version>
		<guava.version>33.2.1-jre</guava.version>
		<fastjson.version>2.0.51</fastjson.version>
		<web3j.version>4.9.7</web3j.version>
		<caffeine.version>3.1.8</caffeine.version>
		<okhttp.version>4.12.0</okhttp.version>
		<graph.version>1.5.2</graph.version>
		<quartz.version>2.3.2</quartz.version>
		<telegram.version>7.7.1</telegram.version>
		<validation.version>2.0.1.Final</validation.version>
		<!-- docker -->
<!--		<jib.version>3.3.1</jib.version>-->
<!--		<docker.repo>${docker.repo}</docker.repo>-->
<!--		<docker.customTag>custom</docker.customTag>-->
		<!-- docker end-->
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring.cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring.cloud.alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba.nacos</groupId>
			<artifactId>nacos-client</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.json</groupId>
			<artifactId>jakarta.json-api</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>${hutool.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-spring-boot3-starter</artifactId>
			<version>${mybatis-plus-version}</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>dynamic-datasource-spring-boot3-starter</artifactId>
			<version>${dynamic-ds-version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<dependency>
			<groupId>p6spy</groupId>
			<artifactId>p6spy</artifactId>
			<version>${p6spy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
			<version>${redisson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.fastjson2</groupId>
			<artifactId>fastjson2</artifactId>
			<version>${fastjson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.web3j</groupId>
			<artifactId>core</artifactId>
			<version>${web3j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.web3j</groupId>
			<artifactId>codegen</artifactId>
			<version>${web3j.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
			<version>${caffeine.version}</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>${okhttp.version}</version>
		</dependency>
		<!-- 基座 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<!-- reactor netty httpclient -->
		<dependency>
			<groupId>io.projectreactor.netty</groupId>
			<artifactId>reactor-netty-http</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bootstrap</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- telegram -->
		<dependency>
			<groupId>org.telegram</groupId>
			<artifactId>telegrambots-springboot-longpolling-starter</artifactId>
			<version>${telegram.version}</version>
		</dependency>
		<dependency>
			<groupId>org.telegram</groupId>
			<artifactId>telegrambots-client</artifactId>
			<version>${telegram.version}</version>
		</dependency>
		<!-- validation -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${validation.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.skywalking</groupId>
			<artifactId>apm-toolkit-log4j-2.x</artifactId>
			<version>9.2.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.skywalking</groupId>
			<artifactId>apm-toolkit-trace</artifactId>
			<version>9.2.0</version>
		</dependency>

		<!-- graph-->
		<dependency>
			<groupId>org.jgrapht</groupId>
			<artifactId>jgrapht-core</artifactId>
			<version>${graph.version}</version>
		</dependency>
		<!-- quartz-->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
		</dependency>

		<!-- spring 监控-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>2.0.27</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.abmatrix.bool.tg.ApplicationStart</mainClass>
				</configuration>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>com.google.cloud.tools</groupId>-->
<!--				<artifactId>jib-maven-plugin</artifactId>-->
<!--				<version>${jib.version}</version>-->
<!--				<configuration>-->
<!--					<from>-->
<!--						<image>-->
<!--							${docker.repo}/jdk17-->
<!--						</image>-->
<!--					</from>-->
<!--					<to>-->
<!--						<image>-->
<!--							${docker.repo}/${project.artifactId}-->
<!--						</image>-->
<!--						<tags>-->
<!--							<tag>latest</tag>-->
<!--							<tag>${profile.active}</tag>-->
<!--							<tag>${project.version}-${profile.active}</tag>-->
<!--							<tag>${docker.customTag}</tag>-->
<!--						</tags>-->
<!--					</to>-->
<!--					&lt;!&ndash;container 节点用来设置容器的属性，例如对外暴露的端口、jvm 参数等 &ndash;&gt;-->
<!--					<container>-->
<!--						<jvmFlags>-->
<!--							&lt;!&ndash;jdk17特性兼容&ndash;&gt;-->
<!--							<jvmFlag>-->
<!--								&#45;&#45;add-opens=java.base/java.lang=ALL-UNNAMED-->
<!--							</jvmFlag>-->
<!--							<jvmFlag>-->
<!--								&#45;&#45;add-opens=java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED-->
<!--							</jvmFlag>-->
<!--							<jvmFlag>-->
<!--								&#45;&#45;add-opens=java.base/java.math=ALL-UNNAMED-->
<!--							</jvmFlag>-->
<!--							<jvmFlag>-->
<!--								&#45;&#45;add-exports=java.naming/com.sun.jndi.ldap=ALL-UNNAMED-->
<!--							</jvmFlag>-->
<!--							<jvmFlag>-->
<!--								&#45;&#45;add-opens=java.base/java.lang.invoke=ALL-UNNAMED-->
<!--							</jvmFlag>-->
<!--							<jvmFlag>-->
<!--								&#45;&#45;add-opens=java.base/java.io=ALL-UNNAMED-->
<!--							</jvmFlag>-->
<!--							<jvmFlag>-->
<!--								&#45;&#45;add-opens=java.base/java.security=ALL-UNNAMED-->
<!--							</jvmFlag>-->
<!--							<jvmFlag>-->
<!--								&#45;&#45;add-opens=java.base/java.util=ALL-UNNAMED-->
<!--							</jvmFlag>-->
<!--							<jvmFlag>-->
<!--								&#45;&#45;add-opens=java.management/javax.management=ALL-UNNAMED-->
<!--							</jvmFlag>-->
<!--							<jvmFlag>-->
<!--								&#45;&#45;add-opens=java.naming/javax.naming=ALL-UNNAMED-->
<!--							</jvmFlag>-->
<!--							<jvmFlag>-->
<!--								&#45;&#45;add-opens=java.base/java.time=ALL-UNNAMED-->
<!--							</jvmFlag>-->
<!--							&lt;!&ndash; jvm 内存参数 &ndash;&gt;-->
<!--							<jvmFlag>${jvm.Xms}</jvmFlag>-->
<!--							<jvmFlag>${jvm.Xmx}</jvmFlag>-->
<!--							&lt;!&ndash; 设置时区 &ndash;&gt;-->
<!--							<jvmFlag>-Duser.timezone=Asia/Shanghai</jvmFlag>-->
<!--							&lt;!&ndash; 配置随机数生成的种子, 加速 Tomcat 启动 &ndash;&gt;-->
<!--							<jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>-->
<!--							&lt;!&ndash; 设置 profile &ndash;&gt;-->
<!--							<jvmFlag>-Dspring.profiles.active=${profile.active}</jvmFlag>-->
<!--							&lt;!&ndash; 开启 debug 端口 &ndash;&gt;-->
<!--							<jvmFlag>-->
<!--								-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005-->
<!--							</jvmFlag>-->
<!--							&lt;!&ndash; 打开bootstrap属性读取功能&ndash;&gt;-->
<!--							<jvmFlag>-Dspring.cloud.bootstrap.enabled=true</jvmFlag>-->
<!--							&lt;!&ndash; 开启zgc&ndash;&gt;-->
<!--							<jvmFlag>-XX:+UseZGC</jvmFlag>-->
<!--							&lt;!&ndash; 元空间增大&ndash;&gt;-->
<!--							<jvmFlag>-XX:MaxMetaspaceSize=1G</jvmFlag>-->
<!--							&lt;!&ndash; 直接内存增大 &ndash;&gt;-->
<!--							<jvmFlag>-XX:MaxDirectMemorySize=512M</jvmFlag>-->
<!--						</jvmFlags>-->
<!--						&lt;!&ndash; 要暴露的端口 &ndash;&gt;-->
<!--						<ports>-->
<!--							<port>8888</port>-->
<!--							<port>5005</port>-->
<!--						</ports>-->
<!--					</container>-->
<!--					<allowInsecureRegistries>true</allowInsecureRegistries>-->
<!--				</configuration>-->
<!--				&lt;!&ndash; 解决 maven 工程是父子结构的 mvn compile &ndash;&gt;-->
<!--				&lt;!&ndash; 把 jib 绑定到 maven 命令中&ndash;&gt;-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<phase>deploy</phase>-->
<!--						<goals>-->
<!--							<goal>build</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<parameters>true</parameters>
					<source>17</source>
					<target>17</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

	</build>
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<profile.active>dev</profile.active>
				<jvm.Xms>-Xms4g</jvm.Xms>
				<jvm.Xmx>-Xmx4g</jvm.Xmx>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<profile.active>test</profile.active>
				<jvm.Xms>-Xms6g</jvm.Xms>
				<jvm.Xmx>-Xmx6g</jvm.Xmx>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<profile.active>prod</profile.active>
				<jvm.Xms>-Xms8g</jvm.Xms>
				<jvm.Xmx>-Xmx16g</jvm.Xmx>
			</properties>
		</profile>
	</profiles>
</project>